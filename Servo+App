#include <mega128.h>
#include <delay.h>

#define MAXLEN 16

int i=3;
int j=1; 
int delay = 0;
int count = 0;
int pos=0;
int posMax=0;
unsigned char str[MAXLEN];
unsigned char ch;
unsigned char *ptr;
// Fnd 문자표 및 fnd포트 핀 설정
unsigned int Port_char[] ={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90, 0x88, 0x83, 0xA7, 0xA1, 0x86, 0x8E, 0xFF};  // 0~F 의 문자표
unsigned int Port_fnd[] ={0x1f,0x2f,0x4f,0x8f,0x0f};    // FND0 ON, FND1 ON, FND2 ON, FND3 ON, ALL FND OFF

int buf_seg[4] = {0,0,0,0};     // 편의를 위한 전역 변수(버퍼) 생성 

void Init_USART0(void)
{
    UCSR0A = 0x00;
    UCSR0B = 0x98;
    UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
    UBRR0H = 0x00;
    UBRR0L = 103;
    SREG = 0x80;
}  

void Init_USART1(void)
{
    UCSR1A = 0x00;
    UCSR1B = 0x98;
    UCSR1C = (1<<UCSZ01)|(1<<UCSZ00);
    UBRR1H = 0x00;
    UBRR1L = 103;
    SREG = 0x80;
}  
    
void Init_Timer3A(void)
{
    TCCR3A = 0xAA;
    TCCR3B = 0x1A;
    
    OCR3AH = 3000>>8;
    OCR3AL = 3000&0xff;

    ICR3H = 39999>>8;
    ICR3L = 39999>>0xff;
}

void Servo_motor(int angle)
{
    OCR3AH = (angle*14+3640)>>8;
    OCR3AL = (angle*14+3640)&0xFF;
}

void Print_Segment(int buf_seg[])
{
    PORTE = Port_fnd[0]; 
    PORTB = Port_char[buf_seg[0]]; 
    
    
    PORTE = Port_fnd[1]; 
    PORTB = Port_char[buf_seg[1]];
   

    PORTE = Port_fnd[2]; 
    PORTB = Port_char[buf_seg[2]];
   
    
    PORTE = Port_fnd[3]; 
    PORTB = Port_char[buf_seg[3]]; 
    delay_ms(5);
    PORTE = Port_fnd[4]; 
    
}

interrupt [USART0_DRE] void usart0_transmit(void)
{
    while(!(UCSR0A & (1<<RXC1)));
    UDR0 = *str;
}

interrupt [USART0_RXC] void usart0_receive(void)
{
    while(!(UCSR0A & (1<<UDRE1)));
    UDR0 = *str;
}

interrupt [USART1_RXC] void usart1_rx_isr(void)
{
              ch = UDR1;
              
               UDR0=ch;
                
                
              
                 

}
    
void Swing(void)
{

   for(pos=-posMax;pos<posMax;pos++)
             { 
                  Servo_motor(pos);
                        delay_ms(5);
                  }
                  
                  for(pos=posMax;pos>-posMax;pos--)
                  { 
                  Servo_motor(pos);
                       delay_ms(5);
                  }

}

void SwingStop(void)
{
      while(1)
                  { 
                  if(posMax>0)
                  {
                     posMax-=5; 
                     Swing();
                     if(posMax<=0)
                     { 
                     posMax=0;
                     break;
                     }
                     }
                     else break;
                     }
}
void PORT_Init(void)
{
    DDRE = 0xf8;    //   PORTE.4~PORTE.7 FND 출력  (PE.4 : FND0, PE.5, FND1, PE.6 : FND2, PE.7 : FND3)
    DDRB = 0xff;    //   세그먼트의 문자포트 출력(PB.0:a, PB.1:b, PB.2:c, PB.3:d, PB.4:e, PB.5:f, PB.6:g, PB.7:dot)    
    PORTE = 0xf8;       
}

void main (void)
{
    Init_USART0();
    Init_USART1();
    Init_Timer3A();   
    PORT_Init();
    posMax=0; 
    while(1){
                  if(ch=='0')
                  {
                    SwingStop();
                  }
                  if(ch=='1')
                  {  
                    
                  posMax++;
                   Swing();
                  
                  if(posMax==45)
                  {
                   while(1)
                   {
                    
                     Swing();
                      
                     if(ch=='0'||ch=='2'||ch=='3')
                  {    
                      SwingStop();
                     break;
                  }
                  
                  }
                     }
                  }
                  
                  if(ch=='2')
                  {  
                 
                  posMax+=3;
                   Swing();
                  
                  if(posMax>=90)
                  {
                   while(1)
                   {
                     
                     Swing();
                      
                     if(ch=='0'||ch=='1'||ch=='3')
                  {    
                  SwingStop();
                     break;
                  }
                  
                  }
                     }
                  }
                 
                   
                  }
                 }
                  